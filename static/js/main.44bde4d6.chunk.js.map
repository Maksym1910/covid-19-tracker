{"version":3,"sources":["components/header/Header.js","components/main/infobox/InfoBox.js","components/main/map/Map.js","components/main/Stats.js","components/sidebar/Table/Table.js","utils/options.js","utils/buildChartData.js","components/sidebar/LineGraph.js","components/sidebar/Sidebar.js","utils/sort.js","App.js","reportWebVitals.js","index.js"],"names":["Header","countries","country","onCountryChange","className","FormControl","Select","variant","onChange","value","MenuItem","map","name","InfoBox","title","cases","total","Card","CardContent","Typography","color","Map","Stats","countryInfo","todayCases","todayRecovered","recovered","todayDeaths","deaths","Table","tableData","toLocaleString","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","lastDataPoint","casesType","chartData","date","newDataPoint","x","y","push","LineGraph","useState","API","setData","useEffect","a","fetch","then","response","json","fetchedData","length","datasets","backgroundColor","borderColor","Sidebar","sortData","sortedData","sort","b","App","API_WORLDWIDE","API_COUNTRIES","setCountries","setCountry","setCountryInfo","setTableData","iso2","getCountriesData","event","countryCode","target","url","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44bde4d6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\nimport { MenuItem, FormControl, Select } from \"@material-ui/core\";\n\nconst Header = ({ countries, country, onCountryChange }) => {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__title\">COVID-19 TRACKER</h1>\n      <FormControl className=\"header__dropdown\">\n        <Select variant=\"outlined\" onChange={onCountryChange} value={country}>\n          <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n          {countries.map((country) => (\n            // eslint-disable-next-line react/jsx-key\n            <MenuItem value={country.value}>{country.name}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./InfoBox.css\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\n\nconst InfoBox = ({ title, cases, total }) => {\n  return (\n    <Card className=\"infoBox\">\n      <CardContent>\n        <Typography className=\"infoBox__title\" color=\"textSecondary\">\n          {title}\n        </Typography>\n        <h2 className=\"infoBox__cases\">{cases}</h2>\n        <Typography className=\"infoBox__total\" color=\"textSecondary\">\n          {total}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default InfoBox;\n","import React from 'react';\r\n\r\nconst Map = () => {\r\n  return (\r\n    <div>\r\n      <h1>Map</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;","import React from 'react';\r\nimport './Stats.css';\r\nimport InfoBox from \"./infobox/InfoBox\";\r\nimport Map from \"./map/Map\";\r\n\r\nconst Stats = ({ countryInfo }) => {\r\n\r\n  return (\r\n    <div>\r\n      <div className='stats'>\r\n          <InfoBox title='Coronavirus cases' cases={countryInfo.todayCases} total={countryInfo.cases} />\r\n          <InfoBox title='Recovered' cases={countryInfo.todayRecovered} total={countryInfo.recovered}/>\r\n          <InfoBox title='Deaths' cases={countryInfo.todayDeaths} total={countryInfo.deaths}/>\r\n      </div>\r\n      <Map />\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Stats;","import React from \"react\";\nimport \"./Table.css\";\n\nconst Table = ({ tableData }) => {\n  return (\n    <div className=\"table\">\n      {tableData.map(({ country, cases }) => (\n        // eslint-disable-next-line react/jsx-key\n          <tr>\n            <td>{country}</td>\n            <td>\n              <strong>{cases.toLocaleString()}</strong>\n            </td>\n          </tr>\n      ))}\n    </div>\n  );\n};\n\nexport default Table;\n","import numeral from \"numeral\";\r\n\r\nexport const options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0,0\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};","export const buildChartData = (data, casesType = \"cases\") => {\r\n  const chartData = [];\r\n  let lastDataPoint;\r\n  for (const date in data[casesType]) {\r\n    if (lastDataPoint) {\r\n      const newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};","import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { options } from \"../../utils/options\";\nimport { buildChartData } from \"../../utils/buildChartData\";\n\nconst LineGraph = ({ casesType = \"cases\" }) => {\n  const [API] = useState(\n    \"https://disease.sh/v3/covid-19/historical/all?lastdays=120\"\n  );\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchedData = async () => {\n      await fetch(API)\n        .then((response) => response.json())\n        .then((data) => {\n          const chartData = buildChartData(data, casesType);\n          setData(chartData);\n        });\n    };\n    fetchedData();\n  }, [casesType]);\n\n  return (\n    <div>\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1034\",\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default LineGraph;\n","import React from 'react';\r\nimport {Card, CardContent} from \"@material-ui/core\";\r\nimport Table from \"./Table/Table\";\r\nimport LineGraph from \"./LineGraph\";\r\nimport './Sidebar.css';\r\n\r\nconst Sidebar = ({ tableData }) => {\r\n  return (\r\n    <Card className='sidebar'>\r\n      <CardContent>\r\n        <h3>Live Cases by Country</h3>\r\n        <Table tableData={tableData} />\r\n        <h4 className='sidebar__chart'>Worldwide new cases</h4>\r\n        <LineGraph />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","export const sortData = (data) => {\n  const sortedData = [...data];\n  sortedData.sort((a, b) => b.cases - a.cases);\n  return sortedData;\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header/Header\";\nimport Stats from \"./components/main/Stats\";\nimport Sidebar from \"./components/sidebar/Sidebar\";\nimport { sortData } from \"./utils/sort\";\n\nfunction App() {\n  const [API_WORLDWIDE] = useState(\n    \"https://disease.sh/v3/covid-19/all?yesterday=true&strict=true\"\n  );\n  const [API_COUNTRIES] = useState(\"https://disease.sh/v3/covid-19/countries/\");\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    fetch(API_WORLDWIDE)\n      .then((response) => response.json())\n      .then((data) => setCountryInfo(data));\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      const response = await fetch(API_COUNTRIES);\n      const data = await response.json();\n      const countries = data.map((country) => ({\n        name: country.country,\n        value: country.countryInfo.iso2,\n      }));\n\n      const sortedData = sortData(data);\n      setTableData(sortedData);\n      setCountries(countries);\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    const url =\n      countryCode === \"worldwide\"\n        ? API_WORLDWIDE\n        : API_COUNTRIES.concat(countryCode).concat(\n            \"?yesterday=true&strict=true\"\n          );\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <Header\n          country={country}\n          countries={countries}\n          onCountryChange={onCountryChange}\n        />\n        <Stats countryInfo={countryInfo} />\n      </div>\n\n      <div className=\"app__right\">\n        <Sidebar tableData={tableData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}