{"version":3,"sources":["components/header/Header.js","components/main/infobox/InfoBox.js","utils/showDataOnMap.js","components/main/map/Map.js","utils/prettyPrintStat.js","components/main/Stats.js","components/sidebar/table/Table.js","utils/options.js","utils/buildChartData.js","components/sidebar/lineGraph/LineGraph.js","components/sidebar/Sidebar.js","utils/sort.js","App.js","reportWebVitals.js","index.js"],"names":["Header","countries","country","onCountryChange","className","FormControl","Select","variant","onChange","value","MenuItem","map","index","name","InfoBox","title","cases","total","props","Card","onClick","CardContent","Typography","color","casesTypeColors","hex","multiplier","recovered","deaths","showDataOnMap","data","casesType","Circle","center","countryInfo","lat","long","fillColor","fillOpacity","radius","Math","sqrt","Popup","style","backgroundImage","flag","numeral","format","Map","mapCountries","zoom","SetViewOnClick","useMap","setView","TileLayer","attribution","url","prettyPrintStat","stat","Stats","setCasesType","todayCases","todayRecovered","todayDeaths","Table","tableData","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","scales","xAxes","type","time","parser","tooltipFormat","yAxes","gridLines","ticks","callback","values","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","API","setData","useEffect","a","fetch","then","response","json","fetchedData","length","datasets","backgroundColor","borderColor","Sidebar","sortData","sortedData","sort","b","App","API_WORLDWIDE","API_COUNTRIES","setCountries","setCountry","setCountryInfo","setTableData","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","setMapCountries","iso2","getCountriesData","event","countryCode","target","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9481e96f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\nimport { MenuItem, FormControl, Select } from \"@material-ui/core\";\n\nconst Header = ({ countries, country, onCountryChange }) => {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__title\">COVID-19 TRACKER</h1>\n      <FormControl className=\"header__dropdown\">\n        <Select variant=\"outlined\" onChange={onCountryChange} value={country}>\n          <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n          {countries.map((country, index) => (\n            <MenuItem key={index} value={country.value}>{country.name}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./InfoBox.css\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\n\nconst InfoBox = ({ title, cases, total, ...props }) => {\n  return (\n    <Card onClick={props.onClick} className=\"infoBox\">\n      <CardContent>\n        <Typography className=\"infoBox__title\" color=\"textSecondary\">\n          {title}\n        </Typography>\n        <h2 className=\"infoBox__cases\">{cases}</h2>\n        <Typography className=\"infoBox__total\" color=\"textSecondary\">\n          {total} Total\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default InfoBox;\n","import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    multiplier: 200,\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    multiplier: 300,\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    multiplier: 500,\n  },\n};\n\nexport const showDataOnMap = (data, casesType) =>\n  data.map((country, index) => (\n    <Circle\n      key={index}\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      color={casesTypeColors[casesType].hex}\n      fillColor={casesTypeColors[casesType].hex}\n      fillOpacity={0.4}\n      radius={\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n      }\n    >\n      <Popup>\n        <div className=\"info-container\">\n          <div\n            className=\"info-flag\"\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n          />\n          <div className=\"info-name\">{country.country}</div>\n          <div className=\"info-confirmed\">\n            Cases: {numeral(country.cases).format(\"0,0\")}\n          </div>\n          <div className=\"info-recovered\">\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\n          </div>\n          <div className=\"info-deaths\">\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\n          </div>\n        </div>\n      </Popup>\n    </Circle>\n  ));\n","import React from \"react\";\nimport \"./Map.css\";\nimport { MapContainer as LeafletMap, TileLayer, useMap } from \"react-leaflet\";\nimport {showDataOnMap} from \"../../../utils/showDataOnMap\";\n\nconst Map = ({ mapCountries, center, zoom, casesType }) => {\n  function SetViewOnClick({ center, zoom }) {\n    const map = useMap();\n    map.setView(center, zoom);\n    return null;\n  }\n\n  return (\n    <div className=\"map\">\n      <LeafletMap center={center} zoom={zoom}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <SetViewOnClick center={center} zoom={zoom} />\n        {showDataOnMap(mapCountries, casesType)}\n      </LeafletMap>\n    </div>\n  );\n};\n\nexport default Map;\n","import numeral from \"numeral\";\r\n\r\nexport const prettyPrintStat = stat =>\r\n  stat ? `+${numeral(stat).format(\"0,0\")}` : \"+0\";\r\n","import React from \"react\";\nimport \"./Stats.css\";\nimport InfoBox from \"./infobox/InfoBox\";\nimport Map from \"./map/Map\";\nimport \"leaflet/dist/leaflet.css\";\nimport { prettyPrintStat } from \"../../utils/prettyPrintStat\";\n\nconst Stats = ({ mapCountries, countryInfo, center, zoom, casesType, setCasesType }) => {\n  return (\n    <div>\n      <div className=\"stats\">\n        <InfoBox\n          onClick={() => setCasesType(\"cases\")}\n          title=\"Coronavirus cases\"\n          cases={prettyPrintStat(countryInfo.todayCases)}\n          total={prettyPrintStat(countryInfo.cases)}\n        />\n        <InfoBox\n          onClick={() => setCasesType(\"recovered\")}\n          title=\"Recovered\"\n          cases={prettyPrintStat(countryInfo.todayRecovered)}\n          total={prettyPrintStat(countryInfo.recovered)}\n        />\n        <InfoBox\n          onClick={() => setCasesType(\"deaths\")}\n          title=\"Deaths\"\n          cases={prettyPrintStat(countryInfo.todayDeaths)}\n          total={prettyPrintStat(countryInfo.deaths)}\n        />\n      </div>\n      <Map\n        mapCountries={mapCountries}\n        center={center}\n        zoom={zoom}\n        casesType={casesType}\n      />\n    </div>\n  );\n};\n\nexport default Stats;\n","import React from \"react\";\nimport numeral from \"numeral\";\nimport \"./Table.css\";\n\nconst Table = ({ tableData }) => {\n  return (\n    <div className=\"table\">\n      <table>\n        <tbody>\n          {tableData.map(({ country, cases }, index) => (\n            <tr key={index}>\n              <td>{country}</td>\n              <td>\n                <strong>{numeral(cases).format(\"0,0\")}</strong>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import numeral from \"numeral\";\r\n\r\nexport const options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          parser: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: true,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0,0\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};","export const buildChartData = (data, casesType = \"cases\") => {\r\n  const chartData = [];\r\n  let lastDataPoint;\r\n  for (const date in data[casesType]) {\r\n    if (lastDataPoint) {\r\n      const newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};","import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { options } from \"../../../utils/options\";\nimport { buildChartData } from \"../../../utils/buildChartData\";\nimport \"./LineGraph.css\";\n\nconst LineGraph = ({ casesType = \"cases\" }) => {\n  const [API] = useState(\n    \"https://disease.sh/v3/covid-19/historical/all?lastdays=120\"\n  );\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchedData = async () => {\n      await fetch(API)\n        .then((response) => response.json())\n        .then((data) => {\n          const chartData = buildChartData(data, casesType);\n          setData(chartData);\n        });\n    };\n    fetchedData();\n  }, [casesType]);\n\n  return (\n    <div className=\"chart\">\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1034\",\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default LineGraph;\n","import React from \"react\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport Table from \"./table/Table\";\nimport LineGraph from \"./lineGraph/LineGraph\";\nimport \"./Sidebar.css\";\n\nconst Sidebar = ({ tableData }) => {\n  return (\n    <Card className=\"sidebar\">\n      <CardContent>\n        <h3>Live Cases by Country</h3>\n        <Table tableData={tableData} />\n        <h4 className=\"sidebar__chart\">Worldwide new cases</h4>\n        <LineGraph />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Sidebar;\n","export const sortData = (data) => {\n  const sortedData = [...data];\n  sortedData.sort((a, b) => b.cases - a.cases);\n  return sortedData;\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header/Header\";\nimport Stats from \"./components/main/Stats\";\nimport Sidebar from \"./components/sidebar/Sidebar\";\nimport { sortData } from \"./utils/sort\";\n\nfunction App() {\n  const [API_WORLDWIDE] = useState(\n    \"https://disease.sh/v3/covid-19/all?yesterday=true&strict=true\"\n  );\n  const [API_COUNTRIES] = useState(\"https://disease.sh/v3/covid-19/countries/\");\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(() => {\n    fetch(API_WORLDWIDE)\n      .then((response) => response.json())\n      .then((data) => setCountryInfo(data));\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      const response = await fetch(API_COUNTRIES);\n      const data = await response.json();\n      const countries = data.map((country) => ({\n        name: country.country,\n        value: country.countryInfo.iso2,\n      }));\n      const sortedData = sortData(data);\n\n      setCountries(countries);\n      setMapCountries(data);\n      setTableData(sortedData);\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    const url =\n      countryCode === \"worldwide\"\n        ? API_WORLDWIDE\n        : API_COUNTRIES.concat(countryCode).concat(\n            \"?yesterday=true&strict=true\"\n          );\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <Header\n          country={country}\n          countries={countries}\n          onCountryChange={onCountryChange}\n        />\n        <Stats\n          mapCountries={mapCountries}\n          countryInfo={countryInfo}\n          center={mapCenter}\n          zoom={mapZoom}\n          casesType={casesType}\n          setCasesType={setCasesType}\n        />\n      </div>\n\n      <div className=\"app__right\">\n        <Sidebar tableData={tableData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}